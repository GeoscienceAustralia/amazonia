stack_title: # A string containing the name of the cloud formation stack.
  type: 'string'
  empty: False
  regex: '^([a-zA-Z0-9]+$)' # matches an alphanumeric title
keypair: # A string containing the Key Pair to use for ssh access to your instances.
  type: 'string'
  empty: False
code_deploy_service_role: # A string specifying a code deploy IAM role by its ARN
  type: 'string'
  nullable: True
  empty: False
availability_zones: # A list of strings, specifying each availability zone to use when creating resources.
  type: 'list'
  empty: False
  schema:
    type: 'string'
    empty: False
vpc_cidr: # A cidr block to delegate to your VPC.
  type: 'string'
  empty: False # Below regex matches a CIDR pattern eg: 10.0.0.0/16
  regex: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$'
public_cidr: # A dictionary containing the name and cidr block to be considered 'public' by your stack.
  type: 'dict'
  empty: False
  schema:
    name:
      type: 'string'
      empty: False
      regex: '^([a-zA-Z0-9]+$)' # matches an alphanumeric title
    cidr:
      type: 'string'
      empty: False # Below regex matches a CIDR pattern eg: 10.0.0.0/16
      regex: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$'
jump_image_id: # A string specifying which ami to use for your jump box by its id
  type: 'string'
  empty: False
  regex: '^(ami-[a-zA-Z0-9]+$)' # matches an ami number eg: ami-some1234
jump_instance_type: # A string specifying which instance type to use for your jump box.
  type: 'string'
  empty: False
nat_image_id: # A string specifying which ami to use for your NAT by its id
  type: 'string'
  empty: False
  regex: '^(ami-[a-zA-Z0-9]+$)' # matches an ami number eg: ami-some1234
nat_instance_type: # A string specifying which instance type to use for your NAT.
  type: 'string'
  empty: False
home_cidrs: # A list of dictionaries with each list element containing the name and cidr blocks to be considered 'safe' for ssh access to your stack.
  type: 'list'
  empty: False
  schema:
    type: 'dict'
    schema:
      name:
        type: 'string'
        empty: False
        regex: '^([a-zA-Z0-9]+$)' # matches an alphanumeric title
      cidr:
        type: 'string'
        empty: False # Below regex matches a CIDR pattern eg: 10.0.0.0/16
        regex: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$'
stack_hosted_zone_name: # A string containing the name of the Route 53 hosted zone name to use for creation of record sets for your stack
  type: 'string'
  nullable: True
  empty: False
zd_autoscaling_units:  # A list of autoscaling groups to create. Load balancers, security groups, launch configurations, and autoscaling groups will be created for each of these units
  type: 'list'
  nullable: True
  schema:
    type: 'dict'
    allow_unknown: True
    schema:
      unit_title:  # A string containing the title of this autoscaling unit.
        type: 'string'
        regex: '^([a-zA-Z0-9]+$)' # matches an alphanumeric title
        nullable: True
      dependencies: # A list of strings with the titles of objects that this autoscaling unit depends on. eg: your autoscaling group may have userdata that needs internet access, therefore they have a dependency on your NAT.
        type: 'list'
        nullable: True
        schema:
          type: 'string'
          nullable: True
      elb_config: #nested dictionary containing elb specific configuration
        type: 'dict'
        nullable: True
        allow_unknown: True
      common_asg_config: #nested dictionary containing common asg specific configuration
        type: 'dict'
        nullable: True
        allow_unknown: True
      blue_asg_config: #nested dictionary containing blue asg specific configuration
        type: 'dict'
        nullable: True
        allow_unknown: True
      green_asg_config: #nested dictionary containing blue asg specific configuration
        type: 'dict'
        nullable: True
        allow_unknown: True
      zd_state:
        type: 'string'
        allowed:
        - 'blue'
        - 'green'
        - 'both'
autoscaling_units:  # A list of autoscaling groups to create. Load balancers, security groups, launch configurations, and autoscaling groups will be created for each of these units
  type: 'list'
  nullable: True
  schema:
    type: 'dict'
    allow_unknown: True
    schema:
      unit_title:  # A string containing the title of this autoscaling unit.
        type: 'string'
        regex: '^([a-zA-Z0-9]+$)' # matches an alphanumeric title
        nullable: True
      dependencies: # A list of strings with the titles of objects that this autoscaling unit depends on. eg: your autoscaling group may have userdata that needs internet access, therefore they have a dependency on your NAT.
        type: 'list'
        nullable: True
        schema:
          type: 'string'
          nullable: True
      elb_config: #nested dictionary containing elb specific configuration
        type: 'dict'
        nullable: True
        allow_unknown: True
      asg_config: #nested dictionary containing asg specific configuration
        type: 'dict'
        nullable: True
        allow_unknown: True
database_units: # A list of database units to create. Security groups, Database Subnet Groups, and RDS instances will be created for each of these units
  nullable: True
  type: 'list'
  schema:
    type: 'dict'
    schema:
      unit_title:  # A string containing the title of this autoscaling unit.
        type: 'string'
        regex: '^([a-zA-Z0-9]+$)' # matches an alphanumeric title
        nullable: True
      database_config: #nested dictionary containing database specific configuration
        type: 'dict'
        nullable: True
        allow_unknown: True
unit_title: # A string containing the title to use for autoscaling or database units in your stack
  type: 'string' # If unit title is not provided here, it must be provided as an embeded key in any autoscaling
  nullable: True # or database units (if they are not also empty).
  regex: '^([a-zA-Z0-9]+$)' # matches an alphanumeric title
  empty: False
db_instance_type: # A string containing the db type to use for RDS instances
  type: 'string'
  nullable: True
  empty: False
db_engine: # A string containing the database engine to use for RDS instances. Find the available types here: https://aws.amazon.com/rds/
  type: 'string'
  nullable: True
  empty: False
db_port: # A string containing the port to use for communication into RDS instances
  type: 'string'
  nullable: True
  empty: False
db_name: # A string containing the title of any database instance created in this stack.
  type: 'string'
  nullable: True
  empty: False
  regex: '^([a-zA-Z0-9]+$)' # matches an alphanumeric title
db_snapshot_id: # A string with the identifier of an RDS snapshot to use to provision DB
  type: 'string'
  nullable: True
db_hdd_size: # the size for the rds hard drive/allocated storage
  type:
    - 'number'
    - 'string'
  nullable: False
unit_hosted_zone_name: # A string containing the name of the Route 53 hosted zone name to use for creation of record sets for this unit
  type: 'string'
  nullable: True
  empty: False
image_id: # A string specifying which ami to use for autoscaling groups by its id
  type: 'string'
  empty: False
  regex: '^(ami-[a-zA-Z0-9]+$)' # matches an ami number eg: ami-some1234
instance_type: # A string containing the instance type to use for autoscaling groups.
  type: 'string'
  empty: False
iam_instance_profile_arn:  # A string specifying an instance IAM role by its ARN
  type: 'string'
  nullable: True
  empty: False
protocols: # a list of strings specifying the protocols to allow access through load balancers into your autoscaling groups.
  type: 'list'
  empty: False
  schema:
    type: 'string'
    empty: False
instanceports: # a list of strings specifying the ports to send traffic from your load balancers into your autoscaling groups.
  type: 'list'
  empty: False
  schema:
    type: 'string'
    empty: False
loadbalancerports: # a list of strings specifying the ports to receive traffic on your load balancers.
  type: 'list'
  empty: False
  schema:
    type: 'string'
    empty: False
path2ping: # A string containing the path for your load balancers to check to confirm that your instances are healthy.
  type: 'string'
  empty: False
minsize: # a string containing the minimum amount of instances for your autoscaling groups to run
  type: 'string'
  empty: False
maxsize: # a string containing the maximum amount of instances for your autoscaling groups to run
  type: 'string'
  empty: False
health_check_grace_period: # a string containing the amount of seconds for your load balancer to wait for new instances before checking if they are 'healthy' or not.
  type: 'string'
  empty: False
health_check_type: # A string containing the type of health check to use for your autoscaling groups. This should 90% of the time be 'ELB'
  type: 'string'
  empty: False
hdd_size: # the size for the hard drive of instances in any autocaling unit in this stack
  type:
    - 'number'
    - 'string'
  nullable: True
sns_topic_arn: # A string containing the IAM role for SNS topics by it's ARN.
  type: 'string'
  nullable: True
  empty: False
sns_notification_types: # A string containing the notification types for SNS topics
  type:
    - 'list'
    - 'string'
  nullable: True
  empty: False
elb_log_bucket: # A string containing the name of the S3 bucket to log ELB traffic to
  type: 'string'
  nullable: True
  empty: False
public_unit: # a boolean value that determines the internet-facing scheme for the elb and the subnets it lives on in the asg class
    type: 'boolean'
    nullable: False
    empty: False
dependencies: # A list of strings with the titles of objects that your autoscaling units depend on. eg: your autoscaling group may have userdata that needs internet access, therefore they have a dependency on your NAT.
  type: 'list'
  nullable: True
  schema:
    type: 'string'
owner_emails:  # A list of email addresses to specify ownership of this stack and also send alerts to if
  type: 'list' # alerts have been set up.
  nullable: True
  schema:
    type: 'string'
    empty: False
nat_alerting: # A True/False advising whether or not to alert on the NAT instance to the owner_emails list.
  type: 'boolean'
  nullable: False
  empty: False
userdata: # A string containing userdata to run on autoscaling groups.
  type: 'string'
  nullable: True
