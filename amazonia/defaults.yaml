#
# Amazonia's default values to be used for YAML ingestion and overwritten by user values
#

## YAML TIPS:
#   Lists: are denoted by indented hypens
#   Strings: do not need to be enclosed in quotes or double quotes
#   Multi line strings: can be used by establishing a literal block '|'

# Stack values
amz_version: 1.4.5
keypair: 'INSERT_YOUR_KEYPAIR_HERE'
code_deploy_service_role:
availability_zones:
  - 'ap-southeast-2a'
  - 'ap-southeast-2b'
  - 'ap-southeast-2c'
vpc_cidr:
  name: 'VPC'
  cidr: '10.0.0.0/16'
public_cidr:
  name: 'PublicIp'
  cidr: '0.0.0.0/0'
jump_image_id: 'ami-dc361ebf'
jump_instance_type: 't2.nano'
nat_highly_available: false
nat_image_id: 'ami-53371f30'
nat_instance_type: 't2.nano'
home_cidrs:
  - name: 'office'
    cidr: '123.45.12.34/16'
public_hosted_zone_name:
private_hosted_zone_name: 'private.lan.'
owner_emails:
iam_instance_profile_arn:
zd_autoscaling_units:
autoscaling_units:
database_units:
ec2_scheduled_shutdown:

# Common unit default values
unit_title: 'defaulttitle'
dependencies:

# Lambda unit default values
lambda_config:
  lambda_s3_bucket:
  lambda_s3_key:
  lambda_description:
  lambda_function_name:
  lambda_handler:
  lambda_memory_size: 128
  lambda_role_arn:
  lambda_runtime: 'python2.7'
  lambda_timeout: 1
  lambda_schedule:

# Database unit default values
database_config:
  db_instance_type: 'db.t2.small'
  db_engine: 'postgres'
  db_port: '5432'
  db_name: 'myDb'
  db_hdd_size: 5
  db_snapshot_id:
  db_backup_window:
  db_backup_retention:
  db_maintenance_window:
  db_storage_type:

# (ZD) Autoscaling unit default values
elb_listeners_config: &elb_listeners_config
    loadbalancer_protocol: 'HTTP'
    instance_protocol: 'HTTP'
    instance_port: '80'
    loadbalancer_port: '80'
    sticky_app_cookie:

# ELB default values
elb_config:
  elb_listeners_config:
    - *elb_listeners_config
  elb_health_check: 'HTTP:80/index.html'
  elb_log_bucket:
  public_unit: true
  ssl_certificate_id:
  healthy_threshold: 10
  unhealthy_threshold: 2
  interval: 300
  timeout: 30

# Block device configs
block_devices_config:
  device_name: '/dev/xvda'
  ebs_volume_size: '8'
  ebs_volume_type: 'standard'
  ebs_encrypted: False
  ebs_snapshot_id:
  virtual_name: False

# Simple scaling policy:
simple_scaling_policy_config:
  name: 'light load'
  description: 'When under light CPU load for 6 consecutive periods of five minutes, remove one instance, wait 120 seconds'
  metric_name: 'CPUUtilization'
  comparison_operator: 'LessThanOrEqualToThreshold'
  threshold: '15'
  evaluation_periods: 6
  period: 300
  scaling_adjustment: -1
  cooldown: 120

# Asg default values
asg_config: &asg_config
  image_id: 'ami-dc361ebf'
  instance_type: 't2.nano'
  iam_instance_profile_arn:
  minsize: '1'
  maxsize: '1'
  health_check_grace_period: '300'
  health_check_type: 'ELB'
  block_devices_config:
  simple_scaling_policy_config:
  ec2_scheduled_shutdown:
  userdata: |
    #cloud-config
    repo_update: true
    repo_upgrade: all
    packages:
     - httpd
    write_files:
     - content: |
        <html>
        <body>
        <h1>Amazonia created this stack!</h1>
        </body>
        </html>
       path: /var/www/html/index.html
       permissions: '0644'
       owner: root:root
    runcmd:
     - service httpd start

blue_asg_config: *asg_config
green_asg_config: *asg_config

cf_distribution_units:

cf_distribution_config:
  aliases:
  comment:
  default_root_object: 'index.html'
  enabled: True
  price_class: 'PriceClass_All'
  error_page_path: '404.html'
  acm_cert_arn: 
  minimum_protocol_version: 'TLSv1'
  ssl_support_method: 'sni-only'

cf_origins_config:
   domain_name:
   origin_id:
   origin_path:
   custom_headers:
   origin_policy:
     is_s3:
     origin_access_identity:
     origin_protocol_policy:
     http_port: 80
     https_port: 443
     origin_ssl_protocols:
      - 'TLSv1'
      - 'TLSv1.1'
      - 'TLSv1.2'

cf_cache_behavior_config:
   is_default: False
   allowed_methods:
    - 'GET'
    - 'HEAD'
   cached_methods:
    - 'GET'
    - 'HEAD'
   target_origin_id:
   forward_cookies: 'all'
   forwarded_headers:
   viewer_protocol_policy: 'https-only'
   min_ttl: 0
   default_ttl: 0
   max_ttl: 0
   trusted_signers:
   path_pattern:
   query_string: False

request_config: &request_config
  templates:
    application/json: ''
  parameters:
    method.request.header.Origin: "$input.params('Origin')"

response_config: &response_config
  templates:
    application/json: ''
  parameters:
    method.response.header.Set-Cookie: 'integration.response.body.GETCOOKIE'
  selectionpattern: ''
  statuscode: '200'
  models:
    application/json: 'Empty'

method_config:
  method_name: 'login'
  lambda_unit: 'testlambda'
  httpmethod: 'POST'
  authorizationtype: 'NONE'
  request_config: *request_config
  response_config:
    - *response_config

api_gateway_units:

lambda_units:
