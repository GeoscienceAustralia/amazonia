#
# Test Stack Yaml for Amazonia
#
stack_title: 'testStack'
keypair: 'key'
code_deploy_service_role: 'arn:aws:iam::1234567890123:role/CodeDeployServiceRole'
availability_zones:
  - 'ap-southeast-2a'
  - 'ap-southeast-2b'
  - 'ap-southeast-2c'
vpc_cidr: '10.0.0.0/16'
public_cidr:
  name: 'PublicIp'
  cidr: '0.0.0.0/0'
jump_image_id: 'ami-dc361ebf'
jump_instance_type: 't2.micro'
nat_image_id: 'ami-53371f30'
nat_instance_type: 't2.micro'
home_cidrs:
  - name: 'office'
    cidr: '123.45.12.34/16'
stack_hosted_zone_name: 'test.org.'
owner_emails:
nat_alerting: false

autoscaling_units:
  -
    unit_title: 'app1'
#    unit_hosted_zone_name: 'test.org.'
    image_id: 'ami-dc361ebf'
    instance_type: 't2.micro'
    iam_instance_profile_arn: 'arn:aws:iam::1234567890124:role/InstanceProfile'
    protocols:
     - 'HTTP'
    loadbalancerports:
     - '80'
    instanceports:
     - '80'
    path2ping: '/index.html'
    minsize: '1'
    maxsize: '1'
    health_check_grace_period: '300'
    health_check_type: 'ELB'
    hdd_size: '8'
    sns_topic_arn: 'sns_topic_arn'
    sns_notification_types:
      - 'autoscaling:EC2_INSTANCE_LAUNCH'
      - 'autoscaling:EC2_INSTANCE_LAUNCH_ERROR'
      - 'autoscaling:EC2_INSTANCE_TERMINATE'
      - 'autoscaling:EC2_INSTANCE_TERMINATE_ERROR'
    elb_log_bucket: 'elb_log_bucket'
    public_unit: true
    dependencies:
     - 'app2'
     - 'db1'
    userdata: |
      #cloud-config
      repo_update: true
      repo_upgrade: all
      packages:
       - httpd
      write_files:
       - content: |
          <html>
          <body>
          <h1>Amazonia created this stack!</h1>
          </body>
          </html>
         path: /var/www/html/index.html
         permissions: '0644'
         owner: root:root
      runcmd:
       - service httpd start
  -
    unit_title: 'app2'
    unit_hosted_zone_name: 'test.lan.'
    image_id: 'ami-dc361ebf'
    instance_type: 't2.micro'
    iam_instance_profile_arn: 'arn:aws:iam::1234567890124:role/InstanceProfile'
    protocols:
     - 'HTTP'
    loadbalancerports:
     - '80'
    instanceports:
     - '80'
    path2ping: '/index.html'
    minsize: '1'
    maxsize: '1'
    health_check_grace_period: '300'
    health_check_type: 'ELB'
    hdd_size: '8'
    sns_topic_arn: 'sns_topic_arn'
    sns_notification_types:
      - 'autoscaling:EC2_INSTANCE_LAUNCH'
      - 'autoscaling:EC2_INSTANCE_LAUNCH_ERROR'
      - 'autoscaling:EC2_INSTANCE_TERMINATE'
      - 'autoscaling:EC2_INSTANCE_TERMINATE_ERROR'
    elb_log_bucket: 'elb_log_bucket'
    public_unit: false
    userdata: |
      #cloud-config
      repo_update: true
      repo_upgrade: all
      packages:
       - httpd
      write_files:
       - content: |
          <html>
          <body>
          <h1>Amazonia created this stack!</h1>
          </body>
          </html>
         path: /var/www/html/index.html
         permissions: '0644'
         owner: root:root
      runcmd:
       - service httpd start

database_units:
  -
    unit_title: 'db1'
    db_instance_type: 'db.m1.small'
    db_engine: 'postgres'
    db_port: '5432'
    db_name: 'myDb'
