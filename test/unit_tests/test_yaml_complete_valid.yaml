#
# Test Stack Yaml for Amazonia
#
stack_title: 'testStack'
keypair: 'key'
code_deploy_service_role: 'arn:aws:iam::1234567890123:role/CodeDeployServiceRole'
availability_zones:
  - 'ap-southeast-2a'
  - 'ap-southeast-2b'
  - 'ap-southeast-2c'
vpc_cidr: '10.0.0.0/16'
public_cidr:
  name: 'PublicIp'
  cidr: '0.0.0.0/0'
jump_image_id: 'ami-dc361ebf'
jump_instance_type: 't2.micro'
nat_image_id: 'ami-53371f30'
nat_instance_type: 't2.micro'
home_cidrs:
  - name: 'office'
    cidr: '123.45.12.34/16'
stack_hosted_zone_name: 'test.org.'
owner_emails:
nat_alerting: false
iam_instance_profile_arn: 'arn:aws:iam::1234567890124:role/InstanceProfile'

zd_autoscaling_units:
  -
    unit_title: 'zdapp1'
    blue_asg_config:
      image_id: 'ami-dc361ebf'
      instance_type: 't2.micro'
      iam_instance_profile_arn: 'arn:aws:iam::1234567890124:role/InstanceProfile'
      minsize: '1'
      maxsize: '1'
      health_check_grace_period: '300'
      health_check_type: 'ELB'
      hdd_size: '8'
      sns_topic_arn: 'sns_topic_arn'
      sns_notification_types:
        - 'autoscaling:EC2_INSTANCE_LAUNCH'
        - 'autoscaling:EC2_INSTANCE_LAUNCH_ERROR'
        - 'autoscaling:EC2_INSTANCE_TERMINATE'
        - 'autoscaling:EC2_INSTANCE_TERMINATE_ERROR'
      userdata: |
        #cloud-config
        repo_update: true
        repo_upgrade: all
        packages:
         - httpd
        write_files:
         - content: |
            <html>
            <body>
            <h1>Amazonia created this stack!</h1>
            </body>
            </html>
           path: /var/www/html/index.html
           permissions: '0644'
           owner: root:root
        runcmd:
         - service httpd start
    green_asg_config:
      image_id: 'ami-dc361ebf'
      instance_type: 't2.micro'
      iam_instance_profile_arn: 'arn:aws:iam::1234567890124:role/InstanceProfile'
      minsize: '1'
      maxsize: '1'
      health_check_grace_period: '300'
      health_check_type: 'ELB'
      hdd_size: '8'
      sns_topic_arn: 'sns_topic_arn'
      sns_notification_types:
        - 'autoscaling:EC2_INSTANCE_LAUNCH'
        - 'autoscaling:EC2_INSTANCE_LAUNCH_ERROR'
        - 'autoscaling:EC2_INSTANCE_TERMINATE'
        - 'autoscaling:EC2_INSTANCE_TERMINATE_ERROR'
      userdata: |
        #cloud-config
        repo_update: true
        repo_upgrade: all
        packages:
         - httpd
        write_files:
         - content: |
            <html>
            <body>
            <h1>Amazonia created this stack!</h1>
            </body>
            </html>
           path: /var/www/html/index.html
           permissions: '0644'
           owner: root:root
        runcmd:
         - service httpd start
    elb_config:
      protocols:
       - 'HTTP'
      loadbalancerports:
       - '80'
      instanceports:
       - '80'
      path2ping: '/index.html'
      elb_log_bucket: 'elb_log_bucket'
      public_unit: true
    dependencies:
     - 'app2'
     - 'db1'

autoscaling_units:
  -
    unit_title: 'app1'
    asg_config:
      image_id: 'ami-dc361ebf'
      instance_type: 't2.micro'
      iam_instance_profile_arn: 'arn:aws:iam::1234567890124:role/InstanceProfile'
      minsize: '1'
      maxsize: '1'
      health_check_grace_period: '300'
      health_check_type: 'ELB'
      hdd_size: '8'
      sns_topic_arn: 'sns_topic_arn'
      sns_notification_types:
        - 'autoscaling:EC2_INSTANCE_LAUNCH'
        - 'autoscaling:EC2_INSTANCE_LAUNCH_ERROR'
        - 'autoscaling:EC2_INSTANCE_TERMINATE'
        - 'autoscaling:EC2_INSTANCE_TERMINATE_ERROR'
      userdata: |
        #cloud-config
        repo_update: true
        repo_upgrade: all
        packages:
         - httpd
        write_files:
         - content: |
            <html>
            <body>
            <h1>Amazonia created this stack!</h1>
            </body>
            </html>
           path: /var/www/html/index.html
           permissions: '0644'
           owner: root:root
        runcmd:
         - service httpd start
    elb_config:
      protocols:
       - 'HTTP'
      loadbalancerports:
       - '80'
      instanceports:
       - '80'
      path2ping: '/index.html'
      elb_log_bucket: 'elb_log_bucket'
      public_unit: true
    dependencies:
     - 'app2'
     - 'db1'
  -
    unit_title: 'app2'
    asg_config:
      image_id: 'ami-dc361ebf'
      instance_type: 't2.micro'
      iam_instance_profile_arn: 'arn:aws:iam::1234567890124:role/InstanceProfile'
      minsize: '1'
      maxsize: '1'
      health_check_grace_period: '300'
      health_check_type: 'ELB'
      hdd_size: '8'
      sns_topic_arn: 'sns_topic_arn'
      sns_notification_types:
        - 'autoscaling:EC2_INSTANCE_LAUNCH'
        - 'autoscaling:EC2_INSTANCE_LAUNCH_ERROR'
        - 'autoscaling:EC2_INSTANCE_TERMINATE'
        - 'autoscaling:EC2_INSTANCE_TERMINATE_ERROR'
      userdata: |
        #cloud-config
        repo_update: true
        repo_upgrade: all
        packages:
         - httpd
        write_files:
         - content: |
            <html>
            <body>
            <h1>Amazonia created this stack!</h1>
            </body>
            </html>
           path: /var/www/html/index.html
           permissions: '0644'
           owner: root:root
        runcmd:
         - service httpd start
    elb_config:
      unit_hosted_zone_name: 'test.lan.'
      protocols:
       - 'HTTP'
      loadbalancerports:
       - '80'
      instanceports:
       - '80'
      path2ping: '/index.html'
      elb_log_bucket: 'elb_log_bucket'
      public_unit: false

database_units:
  -
    unit_title: 'db1'
    database_config:
      db_instance_type: 'db.m1.small'
      db_engine: 'postgres'
      db_port: '5432'
      db_name: 'myDb'
