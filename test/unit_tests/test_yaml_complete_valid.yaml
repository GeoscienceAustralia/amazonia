#
# Test Stack Yaml for Amazonia
#

stack_title: 'testStack'
code_deploy_service_role: 'arn:aws:iam::1234567890124:role/CodeDeployServiceRole'
keypair: 'key'
availability_zones:
  - 'ap-southeast-2a'
  - 'ap-southeast-2b'
  - 'ap-southeast-2c'
vpc_cidr: '10.0.0.0/16'
public_cidr:
  name: 'PublicIp'
  cidr: '0.0.0.0/0'
jump_image_id: 'ami-05446966'
jump_instance_type: 't2.micro'
nat_image_id: 'ami-162c0c75'
nat_instance_type: 't2.micro'
home_cidrs:
  - name: 'GA1'
    cidr: '124.47.132.132/32'
  - name: 'GA2'
    cidr: '192.104.44.10/22'
autoscaling_units:
  -
    unit_title: 'app1'
    hosted_zone_name: '.test.lan'
    image_id: 'ami-05446966'
    instance_type: 't2.micro'
    protocols:
     - 'HTTP'
    loadbalancerports:
     - '80'
    instanceports:
     - '80'
    path2ping: '/index.html'
    minsize: '1'
    maxsize: '1'
    health_check_grace_period: '300'
    iam_instance_profile_arn: 'arn:aws:iam::1234567890124:role/InstanceProfile'
    sns_topic_arn: 'sns_topic_arn'
    sns_notification_types: 'sns_notification_types'
    elb_log_bucket: 'elb_log_bucket'
    health_check_type: 'ELB'
    dependencies:
     - 'app2'
     - 'db1'
    userdata: |
      #cloud-config
      repo_update: true
      repo_upgrade: all

      packages:
       - httpd

      runcmd:
       - service httpd start
  -
    unit_title: 'app2'
    hosted_zone_name: null
    image_id: 'ami-05446966'
    instance_type: 't2.micro'
    protocols:
     - 'HTTPS'
    loadbalancerports:
     - '443'
    instanceports:
     - '443'
    path2ping: '/index.html'
    minsize: '1'
    maxsize: '1'
    userdata: |
      #cloud-config
      repo_update: true
      repo_upgrade: all

      packages:
       - httpd

      runcmd:
       - service httpd start
database_units:
  -
    unit_title: 'db1'
    db_instance_type: 'db.m1.small'
    db_engine: 'postgres'
    db_port: '5432'
